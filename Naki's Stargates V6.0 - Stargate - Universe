@name Naki's Stargates V6.0 - Stargate - Universe
@inputs Glyph:entity
@persist [Address Name]:string [Mat_Base Mat_Base_Symbols Mat_Soundron]:string [Color_Base Color_Base_Symbols Sound_Color_On Sound_Color_Off]:vector Width_Soundron1 Width_Soundron2 Width_Base Width Size AngleReturn
@persist SpeedSpawn Ang Flip Rotate WantedGlyph [DialedGlyphs]:array Cur CurGlyph Encode Open DialedAddress:string Called [GetTargetEntity DHDEnt]:entity Exists
@outputs Ang Flip Rotate WantedGlyph [DialedGlyphs]:array Cur CurGlyph Encode Open DialedAddress:string Called AngleReturn [Sound Roll]:webaudio
@persist V V2 Error Block Val Switch Iris
@model models/sprops/geometry/fdisc_132.mdl

if(first()){
    
    SpeedSpawn = 1
    
    dsJoinGroup("stargate-naki")
    dsSetScope(2)
    
    #include "glyph_repository"
    
    entity():setAlpha(0)
    
    Address = "spawn17"
    
    Cur=1
    
    #Name of the gate
    Name = "Spawn"
    
    setName(Name+": "+Address)
    
    dsSend(Address+"_check_exists","stargate-naki",table(Address,entity()))
    
    if(Address:explode(""):count()>9){
        Error=1
    }elseif(Address:explode(""):count()<7){
        Error=2
    }else{
        for(I = 1,Address:explode(""):count()){
            if(Address:explode("")[I,string]==Address:explode("")[I+1,string]){
                Error=3
            }elseif(Address:explode("")[I,string]==Address:explode("")[I+2,string]){
                Error=3
            }elseif(Address:explode("")[I,string]==Address:explode("")[I+3,string]){
                Error=3
            }elseif(Address:explode("")[I,string]==Address:explode("")[I+4,string]){
                Error=3
            }elseif(Address:explode("")[I,string]==Address:explode("")[I+5,string]){
                Error=3
            }elseif(Address:explode("")[I,string]==Address:explode("")[I+6,string]){
                Error=3
            }elseif(Address:explode("")[I,string]==Address:explode("")[I+7,string]){
                Error=3
            }elseif(Address:explode("")[I,string]==Address:explode("")[I+8,string]){
                Error=3
            }
        }
    }
    if(Error==1){
        hint("Invalid address code: Code is too long!",7)
    }
    if(Error==2){
        hint("Invalid address code: Code is too short!",7)
    }
    if(Error==3){
        hint("Invalid address code: An Address cannot contain the same symbol more than once!",7)
    }
    if(Error>0){
        Block = 1
    }else{
        Block = 0
    }
    
    Mat_Base = "sprops/textures/sprops_metal5"
    Color_Base = vec(45)
    
    Mat_Base_Symbols = "sprops/textures/sprops_metal5"
    Color_Base_Symbols = vec(40)
    
    Mat_Soundron = "models/debug/debugwhite"
    
    Sound_Color_On = vec(255)
    Sound_Color_Off = vec(40)
    
    Width = 0.8
    
    Width_Soundron1 = 0.7
    Width_Soundron2 = 1.4
    Width_Base = 1
    
    Size = 1.15
    
    local I = 1
    local E = entity()
    local P = entity()
    holoCreate(I)
    holoPos(I,E:toWorld(vec(0,0,0)))
    holoAng(I,E:toWorld(ang(0,0,0)))
    holoScale(I,vec(7,2*Width_Base*Width,7)*Size)
    holoModel(I,"models/sprops/geometry/fring_30.mdl")
    holoMaterial(I,Mat_Base_Symbols)
    holoColor(I,Color_Base_Symbols)
    holoParent(I,P)
    
    local I = 2
    local E = entity()
    local P = holoEntity(1)
    holoCreate(I)
    holoPos(I,E:toWorld(vec(0,0,0)))
    holoAng(I,E:toWorld(ang(0,0,0)))
    holoScale(I,vec(2.95,3.8*Width_Base*Width,2.95)*Size)
    holoModel(I,"models/sprops/geometry/fring_72.mdl")
    holoMaterial(I,Mat_Base)
    holoColor(I,Color_Base*0.9)
    holoParent(I,P)
    
    local I = 3
    local E = entity()
    local P = holoEntity(1)
    holoCreate(I)
    holoPos(I,E:toWorld(vec(0,0,0)))
    holoAng(I,E:toWorld(ang(0,0,0)))
    holoScale(I,vec(1.3,2.6*Width_Base*Width,1.3)*Size)
    holoModel(I,"models/sprops/geometry/fring_132.mdl")
    holoMaterial(I,Mat_Base)
    holoColor(I,Color_Base*0.8)
    holoParent(I,P)
    
    local I = 4
    local E = entity()
    local P = holoEntity(1)
    holoCreate(I)
    holoPos(I,E:toWorld(vec(0,0,0)))
    holoAng(I,E:toWorld(ang(0,0,0)))
    holoScale(I,vec(0))
    holoParent(I,P)
    
    function chevronHolo(Index,[Par2 Par1]:entity,Ang,Index_Soundron){
        
        holoAng(4,entity():toWorld(ang((360/9)+Ang,0,0)))
        
        local I = Index
        local E = Par2
        local P = Par1
        holoCreate(I)
        holoPos(I,E:toWorld(vec(0,2,99)*Size))
        holoAng(I,E:toWorld(ang(0,0,174)))
        holoScale(I,vec(1*Width_Soundron2,4*Width_Soundron1*Width,2.8)*Size)
        holoModel(I,"models/sprops/geometry/hhex_12.mdl")
        holoMaterial(I,Mat_Base)
        holoColor(I,Color_Base)
        holoParent(I,P)
        
        local I = Index+1
        local E = Par2
        local P = Par1
        holoCreate(I)
        holoPos(I,E:toWorld(vec(0,-2,99)*Size))
        holoAng(I,E:toWorld(ang(0,0,186)))
        holoScale(I,vec(1*Width_Soundron2,4*Width_Soundron1*Width,2.8)*Size)
        holoModel(I,"models/sprops/geometry/hhex_12.mdl")
        holoMaterial(I,Mat_Base)
        holoColor(I,Color_Base)
        holoParent(I,P)
        
        local I = Index_Soundron
        local E = Par2
        local P = Par1
        holoCreate(I)
        holoPos(I,E:toWorld(vec(0,2,101)*Size))
        holoAng(I,E:toWorld(ang(0,0,174)))
        holoScale(I,vec(0.5*Width_Soundron2,4.4*Width_Soundron1*Width,2.2)*Size)
        holoModel(I,"models/sprops/geometry/hhex_12.mdl")
        holoMaterial(I,Mat_Soundron)
        holoColor(I,Sound_Color_Off)
        holoParent(I,P)
        
        local I = Index_Soundron+1
        local E = Par2
        local P = Par1
        holoCreate(I)
        holoPos(I,E:toWorld(vec(0,-2,101)*Size))
        holoAng(I,E:toWorld(ang(0,0,186)))
        holoScale(I,vec(0.5*Width_Soundron2,4.4*Width_Soundron1*Width,2.2)*Size)
        holoModel(I,"models/sprops/geometry/hhex_12.mdl")
        holoMaterial(I,Mat_Soundron)
        holoColor(I,Sound_Color_Off)
        holoParent(I,P)
        
        local I = Index+2
        local E = Par2
        local P = Par1
        holoCreate(I)
        holoPos(I,E:toWorld(vec(0,0,105.1)*Size))
        holoAng(I,E:toWorld(ang(0,0,0)))
        holoScale(I,vec(2.7*Width_Soundron2,6*Width_Soundron1*Width,0.4)*Size)
        holoModel(I,"models/sprops/geometry/hhex_12.mdl")
        holoMaterial(I,Mat_Base)
        holoColor(I,Color_Base)
        holoParent(I,P)
    }
    
        local I = 69
        local E = entity()
        local P = entity()
        holoCreate(I)
        holoPos(I,E:toWorld(vec(0,0,0)))
        holoAng(I,E:toWorld(ang(0,0,0)))
        holoScale(I,vec(2.2,0.1,2.2)*Size*0)
        holoModel(I,"models/sprops/geometry/fdisc_84.mdl")
        holoMaterial(I,"models/shadertest/predator")#models/shadertest/predator
        holoColor(I,vec(0,125,255)*0.8)
        holoParent(I,P)
        holoDisableShading(I,1)
        holoAlpha(I,254)
        
        holoEntity(I):setRenderMode(9)
        
        local I = 9999
        local E = entity()
        local P = entity()
        #holoCreate(I)
        holoPos(I,E:toWorld(vec(0,0,0)))
        holoAng(I,E:toWorld(ang(0,0,0)))
        holoScale(I,vec(2.2,0.05,2.2)*Size*0)
        holoModel(I,"models/sprops/geometry/fdisc_84.mdl")
        holoMaterial(I,"sprops/trans/lights/light_plastic")
        holoColor(I,(vec(0,0,255)*0.3)+vec(255)*0.7)
        holoAlpha(I,50)
        holoParent(I,P)
        #holoDisableShading(I,1)
        #holoAlpha(I,254)
        
        holoEntity(I):setRenderMode(9)
        
        local I = 70
        local E = entity()
        local P = entity()
        holoCreate(I)
        holoPos(I,E:toWorld(vec(0,75,0)*Size))
        holoAng(I,E:toWorld(ang(0,0,90)))
        holoScale(I,vec(1,1,1)*Size*0)
        holoModel(I,"models/props_foliage/tree_poplar_01.mdl")
        holoMaterial(I,"models/shadertest/shader3")#models/shadertest/shader3
        holoColor(I,vec(0,125,255)*0.8)
        holoParent(I,P)
        holoDisableShading(I,1)
        holoAlpha(I,254)
        
        holoClip(I,1,vec(0,0,100),E:up(),0)
        holoClipEnabled(I,1,1)
        
        holoEntity(I):setRenderMode(9)
        
        local I = 71
        local E = entity()
        local P = entity()
        holoCreate(I)
        holoPos(I,E:toWorld(vec(0,0,0)))
        holoAng(I,E:toWorld(ang(0,0,90)))
        holoScale(I,vec(3.5,3.5,0)*Size*0)
        holoModel(I,"models/sprops/misc/domes/size_4/dome_48x144.mdl")
        holoMaterial(I,"models/spawn_effect")#models/spawn_effect
        holoColor(I,vec(0,125,255)*0.8)
        holoParent(I,P)
        holoDisableShading(I,1)
        holoAlpha(I,254)
        
        holoEntity(I):setRenderMode(9)
        #(0 = Normal, 1 = TransColor, 2 = TransTexture, 3 = Glow, 4 = TransAlpha, 5 = TransAdd, 6 = Enviromental, 7 = TransAddFrameBlend, 8 = TransAlphaAdd, 9 = WorldGlow, 10 = None)
    
    holoCreate(1000)
    holoPos(1000,Glyph:toWorld(vec(0,0,0)))
    holoAng(1000,Glyph:toWorld(ang(0,0,0)))
    Glyph:parentTo(holoEntity(1000))
    holoScale(1000,vec(0))
    holoParent(1000,holoEntity(1))
    
    Glyph:setColor(Color_Base_Symbols)
    Glyph:setMaterial(Mat_Soundron)
    
    timer("holocreate2",SpeedSpawn ? 10 : 100)
    
    entity():soundPlay(1,0,"physics/metal/metal_box_scrape_smooth_loop1.wav")
    soundVolume(1,0)
    function splash(){
        if(!Called){
            dsSend(DialedAddress+"_check","stargate-naki",table(Address,entity(),Name))
            timer("404",2000)
        }
    }
    
    function number getCurGlyph(A){
        R = 0
        for(I=1,36){
            SectorStart=((360/36)*I)-5
            SectorEnd=((360/36)*I)+5
            if(A>SectorStart&A<SectorEnd){
                R = I
            }
        }
        return R
    }
    
    function encodeGlyph(GetGlyph){
        if(!Open){
            Rotate=0
            Flip=!Flip
            Encode=1
            if(Roll:isValid()){
                Roll:destroy()
            }
            if(!AngleReturn){
                if(Sound:isValid()){
                    Sound:destroy()
                }
                if(webAudiosLeft()>0&webAudioCanCreate()){
                    Sound = webAudio("https://raw.githubusercontent.com/RafaelDeJongh/cap_resources/master/sound/stargate/universe/just_chevron.mp3")
                    Sound:setPos(entity():pos())
                    Sound:setRadius(2000)
                    Sound:parentTo(entity())
                    Sound:play()
                }
                if(Cur<DialedGlyphs:count()){
                    timer("rotate",800)
                    Cur++
                }else{
                    Cur=DialedGlyphs:count()+1
                    splash()
                }
                timer("chev7",700)
            }else{
                AngleReturn=0
            }
        }
    }
    
    function resetData(){
        Switch=Val=Called=Encode=Open=Exists=Rotate=Flip=0
        Cur=1
        DialedGlyphs=array()
        DialedAddress=GetAddress=CallingAddress=""
        if(Roll:isValid()){
            Roll:destroy()
        }
        timer("anglereturn",500)
    }
    
    function openGate(GetAddress:string){
        Open=1
        DialedAddress = GetAddress
        DialedGlyphs = DialedAddress:explode("")
        
        Cur=DialedGlyphs:count()+1
        splash()
    }
    function number vector:isInCone(Origin:vector,Dir:angle,ConeAng,Dist){
        local TargPos = This
        local Dang = bearing(Origin,Dir,TargPos)
        local Fang = elevation(Origin,Dir,TargPos)
        local Tdist = TargPos:distance(Origin)
        if(abs(Fang)<=ConeAng && abs( Dang ) <= ConeAng && Tdist <= Dist){
            return 1
        }else{
            return 0 
        }
    }
    function dial(){
        #if(!Called){
            timer("rotate",100)
        #}
    }
}elseif(dupefinished()){
    reset()
}elseif(clk("holocreate2")){
    if(holoRemainingSpawns()>5){
        V2++
        holoAng(71,entity():toWorld(ang((-(360/(36))/2)+(360/(36)*V2),0,0)))
        
        holoCreate(V2+72)
        holoPos(V2+72,holoEntity(71):toWorld(vec(0,0,90)*Size))
        holoAng(V2+72,holoEntity(71):toWorld(ang(0,0,0)))
        holoScale(V2+72,vec(0.4,2,5)*Size)
        holoModel(V2+72,"models/sprops/rectangles/size_1/rect_3x3x3.mdl")
        holoMaterial(V2+72,Mat_Base)
        holoColor(V2+72,Color_Base*0.75)
        holoParent(V2+72,holoEntity(1))
        if(V2<(36)){
            timer("holocreate2",SpeedSpawn ? 10 : 100)
        }
    }else{
        timer("holocreate2",1000)
    }
    if(V2>=36){
        timer("holocreate",SpeedSpawn ? 10 : 100)
        holoAng(71,entity():toWorld(ang(0,0,90)))
        holoPos(1000,entity():toWorld(vec(0,0,1.15)*Size))
        holoAng(1000,entity():toWorld(ang(0,0,0)))
    }
}elseif(clk("holocreate")){
    if(holoRemainingSpawns()>4){
        V++
        if(V==1){
            chevronHolo(5,holoEntity(4),holoEntity(1),(360/9)*0,51) # chevron 1
        }
        if(V==2){
            chevronHolo(10,holoEntity(4),holoEntity(1),(360/9)*1,53) # chevron 2
        }
        if(V==3){
            chevronHolo(15,holoEntity(4),holoEntity(1),(360/9)*2,55) # chevron 3
        }
        if(V==4){
            chevronHolo(20,holoEntity(4),holoEntity(1),(360/9)*3,57) # chevron 4
        }
        if(V==5){
            chevronHolo(25,holoEntity(4),holoEntity(1),(360/9)*4,59) # chevron 5
        }
        if(V==6){
            chevronHolo(30,holoEntity(4),holoEntity(1),(360/9)*5,61) # chevron 6
        }
        if(V==7){
            chevronHolo(35,holoEntity(4),holoEntity(1),(360/9)*6,63) # chevron 7
        }
        if(V==8){
            chevronHolo(40,holoEntity(4),holoEntity(1),(360/9)*7,65) # chevron 8
        }
        if(V==9){
            chevronHolo(45,holoEntity(4),holoEntity(1),(360/9)*8,67) # chevron 9
        }
        if(V<9){
            timer("holocreate",SpeedSpawn ? 10 : 100)
        }else{
            interval(50)
        }
    }else{
        timer("holocreate",1000)
    }
}elseif(!Block){
    interval(50)
    if(Rotate){
        if(Flip){
            Ang-=360/(36*3.3)
        }else{
            Ang+=360/(36*3.3)
        }
    }
    if(Ang>=361){
        Ang=1
    }
    if(Ang<=-1){
        Ang=359
    }
    WantedGlyph=clamp(angle_return(DialedGlyphs[Cur,string])/10,1,36)
    CurGlyph=getCurGlyph(Ang)
    if(changed(CurGlyph)&WantedGlyph==CurGlyph){
        encodeGlyph(CurGlyph)
        Ang=360/36*CurGlyph
    }
    holoAng(1,entity():toWorld(ang(Ang,0,0)))
    
    SoundronsOn=(DialedAddress!="")|Open
    
    Sound1 = Cur>1
    Sound2 = Cur>2
    Sound3 = Cur>3
    Sound4 = Cur>4
    Sound5 = Cur>5
    Sound6 = Cur>6
    Sound7 = Cur>7
    
    Sound8 = Cur>8
    Sound9 = Cur>9
    
    
    holoColor(51,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoColor(52,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoDisableShading(51,SoundronsOn)
    holoDisableShading(52,SoundronsOn)
    
    holoColor(53,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoColor(54,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoDisableShading(53,SoundronsOn)
    holoDisableShading(54,SoundronsOn)
    
    holoColor(55,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoColor(56,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoDisableShading(55,SoundronsOn)
    holoDisableShading(56,SoundronsOn)
    
    holoColor(57,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoColor(58,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoDisableShading(57,SoundronsOn)
    holoDisableShading(58,SoundronsOn)
    
    holoColor(59,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoColor(60,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoDisableShading(59,SoundronsOn)
    holoDisableShading(60,SoundronsOn)
    
    holoColor(61,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoColor(62,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoDisableShading(61,SoundronsOn)
    holoDisableShading(62,SoundronsOn)
    
    holoColor(63,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoColor(64,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoDisableShading(63,SoundronsOn)
    holoDisableShading(64,SoundronsOn)
    
    holoColor(65,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoColor(66,(Sound_Color_On*SoundronsOn)+(Sound_Color_Off*!SoundronsOn))
    holoDisableShading(65,SoundronsOn)
    holoDisableShading(66,SoundronsOn)
    
    holoColor(67,(Sound_Color_On*(SoundronsOn))+(Sound_Color_Off*!(SoundronsOn)))
    holoColor(68,(Sound_Color_On*(SoundronsOn))+(Sound_Color_Off*!(SoundronsOn)))
    holoDisableShading(67,SoundronsOn)
    holoDisableShading(68,SoundronsOn)
    
    if(changed(Encode)){
        if(Encode){
            soundVolume(1,0)
        }
        #holoPos(45,entity():toWorld(vec(0,2-(0.3*Encode),99-(2*Encode))*Size))
        #holoPos(46,entity():toWorld(vec(0,-2+(0.3*Encode),99-(2*Encode))*Size))
        
        #holoPos(67,entity():toWorld(vec(0,2+(0.1*Encode),101+(1*Encode))*Size))
        #holoPos(68,entity():toWorld(vec(0,-2-(0.1*Encode),101+(1*Encode))*Size))
        
        #holoPos(47,entity():toWorld(vec(0,0,105.1+(0.5*Encode))*Size))
    }
    if(dsClk()){
        switch(dsClkName()){
            case Address+"_check_exists",
                DsGetData=dsGetTable()
                CallingAddress=DsGetData[1,string]
                CallingGateEntity=DsGetData[2,entity]
                CallingName=DsGetData[3,string]
                if(CallingAddress==Address){
                    dsSend(CallingAddress+"_exists","stargate-naki",table(Address,entity(),Name))
                }
            break
            
            case Address+"_check",
                DsGetData=dsGetTable()
                CallingAddress=DsGetData[1,string]
                CallingGateEntity=DsGetData[2,entity]
                CallingName=DsGetData[3,string]
                if((CallingAddress!=Address)){
                    if(!Open){
                        dsSend(CallingAddress+"_connect","stargate-naki",table(Address,entity(),Name))
                        Called=1
                        openGate(CallingAddress)
                        GetTargetEntity=DsGetData[2,entity]
                    }
                }
            break
            
            case Address+"_exists",
                Block=1
                hint("Gate with this addess exists already!",7)
            break
            
            case Address+"_close",
                resetData()
            break
            
            case Address+"_connect",
                Exists=1
                stoptimer("404")
                Open=1
                DsGetData=dsGetTable()
                GetTargetEntity=DsGetData[2,entity]
            break
            
            case entity():id()+"_getaddress",
                DsGetData=dsGetTable()
                DialedAddress=DsGetData[2,string]
                if((DialedAddress:explode(""):count()<=9)&DialedAddress:explode(""):count()>=7){
                    if(!Open){
                        DHDEnt=DsGetData[1,entity]
                        if(DsGetData[1,entity]:pos():distance(entity():pos())<500){
                            dial()
                        }
                    }else{
                        dsSend(DHDEnt:id()+"_close","stargate-naki",table(entity(),Address))
                        dsSend(DHDEnt:id()+"_reset","stargate-naki",table(entity(),Address))
                        dsSend(DialedAddress+"_close","stargate-naki",table(Address,entity(),Name))
                        #print(DialedAddress+"_close")
                        timer("reset",500)
                    }
                }else{
                    dsSend(DHDEnt:id()+"_close","stargate-naki",table(entity(),Address))
                    dsSend(DialedAddress+"_close","stargate-naki",table(Address,entity(),Name))
                    #print(DialedAddress+"_close")
                    timer("reset",500)
                    if(Sound:isValid()){
                        Sound:destroy()
                    }
                    if(webAudiosLeft()>0&webAudioCanCreate()){
                        Sound = webAudio("https://raw.githubusercontent.com/RafaelDeJongh/cap_resources/master/sound/stargate/universe/gate_close.mp3")
                        Sound:setPos(entity():pos())
                        Sound:setRadius(2000)
                        Sound:parentTo(entity())
                        Sound:play()
                    }
                }
            break
            
            case Address+"_open",
                Open=1
                stoptimer("404")
            break
        }
    }
    if(changed(DialedAddress)){
        DialedGlyphs = DialedAddress:explode("")
    }
    if(changed(Open)&Open){
        if(Sound:isValid()){
            Sound:destroy()
        }
        if(webAudiosLeft()>0&webAudioCanCreate()){
            Sound = webAudio("https://raw.githubusercontent.com/RafaelDeJongh/cap_resources/master/sound/stargate/universe/gate_open.mp3")
            Sound:setPos(entity():pos())
            Sound:setRadius(2000)
            Sound:parentTo(entity())
            Sound:play()
        }
    }
    if(Open){
        
        if(Val<100){
            if(!Switch){
                Val+=100/15
            }
        }
        if(Val>=100){
            if(!Switch){
                Val=100
            }
            Switch=1
        }
        if(Val>0){
            if(Switch){
                Val-=100/15
            }
        }
        if(Val<0){
            Val=0
        }
        holoScale(69,vec(2.2,0.1,2.2)*Size)
        holoScale(9999,vec(2.2,0.05,2.2)*Size)
        if(Val>0){
            holoScale(70,vec(0.9-(0.5*((Val*!Iris)/100)),0.9-(0.5*((Val*!Iris)/100)),0.5*((Val*!Iris)/100))*Size)
            holoScale(71,vec(3-(1.5*((Val*!Iris)/100)),3-(1.5*((Val*!Iris)/100)),2.5*((Val*!Iris)/100))*Size)
        }else{
            holoScale(70,vec(0))
            holoScale(71,vec(0))
        }
    }else{
        Switch = 0
        Val = 0
        holoScale(69,vec(0))
        holoScale(9999,vec(0))
        holoScale(70,vec(0))
        holoScale(71,vec(0))
    }
    
    if(Open){
        Door1=entity()
        Door2=GetTargetEntity
        
        foreach(I,E:entity=players()){
            if((E:pos()+vec(0,0,E:height()/2)):distance(Door1:pos())<60){
                if(Door1:toWorld(vec(0,100,0)):isInCone(E:shootPos(),E:eyeAngles(),45,200)){
                    E:plySetAng((Door2:right()):toAngle())
                    E:plySetPos(Door2:toWorld(vec(0,-5,-15)+Door1:toLocal(E:pos()):setZ(0)))
                }
            }
            if((E:pos()+vec(0,0,E:height()/2)):distance(Door2:pos())<60){
                if(Door2:toWorld(vec(0,100,0)):isInCone(E:shootPos(),E:eyeAngles(),45,200)){
                    E:plySetAng((Door1:right()):toAngle())
                    E:plySetPos(Door1:toWorld(vec(0,-5,-15)+Door2:toLocal(E:pos()):setZ(0)))
                }
            }
        }
    }

    
}
if(clk("rotate")){
    Rotate=1
    if(Roll:isValid()){
        Roll:destroy()
    }
    if(webAudiosLeft()>0&webAudioCanCreate()){
        Roll = webAudio("https://raw.githubusercontent.com/RafaelDeJongh/cap_resources/master/sound/stargate/universe/gate_roll.mp3")
        Roll:setPos(entity():pos())
        Roll:setRadius(2000)
        Roll:parentTo(entity())
        Roll:play()
    }
}
if(clk("reset")){
    resetData()
}
if(clk("chev7")){
    Encode=0
}
if(clk("404")){
    resetData()
    dsSend(DHDEnt:id()+"_close","stargate-naki",table(entity(),Address))
    timer("error",100)
}
if(clk("error")){
    if(Sound:isValid()){
        Sound:destroy()
    }
    if(webAudiosLeft()>0&webAudioCanCreate()){
        Sound = webAudio("https://raw.githubusercontent.com/RafaelDeJongh/cap_resources/master/sound/stargate/dial_fail_atlantis.mp3")
        Sound:setPos(entity():pos())
        Sound:setRadius(2000)
        Sound:parentTo(entity())
        Sound:play()
    }
}
if(clk("anglereturn")){
    Rotate=1
    WantedGlyph=0
    AngleReturn=1
}
event removed(Resetting:number) {
    if(Roll:isValid()){
        Roll:destroy()
    }
    if(Sound:isValid()){
        Sound:destroy()
    }
}
