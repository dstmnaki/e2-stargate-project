@name Naki's Stargates V5.0 - Transportation Rings
@persist Array:array TextEntry:string WebAudio CanOpen Rise Val Val2 Val3 Val4 Val5 Val6 Val7 Val8 TeleportEffect Address:string WritingData:string Open TargetEnt:entity Block Dial ErrorCode 
#ifdef webAudio(string)
@persist [TransportSoundWA]:webaudio
#endif
@outputs Address:string WritingData:string Open ErrorCode LowerFloor

@persist [ButtonSound RingMoveSound TransportSound DialErrorSound]:string

@persist [Mat_Base]:string [Color_Base]:vector

@model models/sprops/geometry/fdisc_132.mdl

interval(50)
#runOnLast(1)

if(first()){
    
    UseWebAudio = 1
    
    function number isNumber(StrNmbr:string){
        if(StrNmbr=="1"){
            OK=1
        }elseif(StrNmbr=="2"){
            OK=1
        }elseif(StrNmbr=="3"){
            OK=1
        }elseif(StrNmbr=="4"){
            OK=1
        }elseif(StrNmbr=="5"){
            OK=1
        }elseif(StrNmbr=="6"){
            OK=1
        }else{
            OK=0
        }
        return OK
    }
    
    #ifdef webAudio(string)
        WebAudio = UseWebAudio
    #else
        WebAudio = 0
    #endif
    dsJoinGroup("transportation-rings-naki")
    dsSetScope(2)
    
    entity():setAlpha(0)
    
    Address = "1234"
    
    #Name of the gate
    Name = "Naki's Ring Transporter"
    
    ButtonSound="buttons/button3.wav"
    RingMoveSound=""
    TransportSound=""
    DialErrorSound="buttons/button5.wav"
    
    setName(Name+": "+Address)
    
    if(Address:explode(""):count()>4){
        Error=1
    }elseif(Address:explode(""):count()<1){
        Error=2
    }else{
        for(I = 1,Address:explode(""):count()){
            if(Address:explode("")[I,string]==Address:explode("")[I+1,string]){
                Error=3
            }elseif(Address:explode("")[I,string]==Address:explode("")[I+2,string]){
                Error=3
            }elseif(Address:explode("")[I,string]==Address:explode("")[I+3,string]){
                Error=3
            }
            
            if(!isNumber(Address:explode("")[I,string])){
                Error=4
            }
        }
    }
    if(Error==1){
        hint("Invalid address code: Code is too long!",1000)
    }
    if(Error==2){
        hint("Invalid address code: Code is too short!",1000)
    }
    if(Error==3){
        hint("Invalid address code: An Address cannot contain the same number more than once!",1000)
    }
    if(Error==4){
        hint("Invalid address code: An Address has to be made from numbers 1-6!",1000)
    }
    
    if(Error>0){
        Block = 1
    }else{
        Block = 0
    }
    Mat_Base = "sprops/textures/sprops_metal5"
    Color_Base = ((vec(108, 117, 122)*0.8)+(vec(255)*0.2))*0.6
    
    Mat_Base2 = "sprops/textures/sprops_metal5"
    Color_Base2 = ((vec(108, 117, 122)*0.2)+(vec(255)*0.8))*0.6
    
    Mat_Base3 = "sprops/textures/sprops_metal5"
    Color_Base3 = ((vec(108, 117, 122)*0.8)+(vec(255)*0.2))*0.8
    
    PosOffset=vec(0,-3,0)
    
    local I = 1
    local E = entity()
    local P = entity()
    holoCreate(I)
    holoPos(I,E:toWorld(vec(0,3,0)+PosOffset))
    holoAng(I,E:toWorld(ang(0,0,0)))
    holoScale(I,vec(5.5,1,5.5))
    holoModel(I,"models/sprops/geometry/fring_24.mdl")
    holoMaterial(I,"tools/toolsblack")
    holoColor(I,vec())
    holoParent(I,P)
    
    local I = 2
    local E = entity()
    local P = entity()
    holoCreate(I)
    holoPos(I,E:toWorld(vec(0,0,0)+PosOffset))
    holoAng(I,E:toWorld(ang(0,0,0)))
    holoScale(I,vec(5.5,1,5.5))
    holoModel(I,"models/sprops/misc/sq_holes/sqhole_d0_24.mdl")
    holoMaterial(I,Mat_Base3)
    holoColor(I,Color_Base3)
    holoParent(I,P)
    
    local I = 3
    local E = entity()
    local P = entity()
    holoCreate(I)
    holoPos(I,E:toWorld(vec(0,0,0)+PosOffset))
    holoAng(I,E:toWorld(ang(0,0,0)))
    holoScale(I,vec(4.125,1,4.125))
    holoModel(I,"models/sprops/geometry/fdisc_24.mdl")
    holoMaterial(I,Mat_Base3)
    holoColor(I,Color_Base3)
    holoParent(I,P)
    
    local I = 4
    local E = holoEntity(1)
    local P = holoEntity(1)
    holoCreate(I)
    holoPos(I,E:toWorld(vec(0,-3,-33)))
    holoAng(I,E:toWorld(ang(0,0,180)))
    holoScale(I,vec(5.5,1,5.5))
    holoModel(I,"models/sprops/geometry/hring_24.mdl")
    holoMaterial(I,Mat_Base2)
    holoColor(I,Color_Base2)
    holoParent(I,P)
    
    local I = 5
    holoCreate(I)
    holoPos(I,E:toWorld(vec(0,-3,33)))
    holoAng(I,E:toWorld(ang(0,0,0)))
    holoScale(I,vec(5.5,1,5.5))
    holoModel(I,"models/sprops/geometry/hring_24.mdl")
    holoMaterial(I,Mat_Base2)
    holoColor(I,Color_Base2)
    holoParent(I,P)
    
    local I = 6
    local E = entity()
    local P = entity()
    holoCreate(I)
    holoPos(I,E:toWorld(vec(0,5,0)+PosOffset))
    holoAng(I,E:toWorld(ang(0,0,0)))
    holoScale(I,vec(5.5,2,5.5))
    holoModel(I,"models/sprops/geometry/fring_24.mdl")
    holoMaterial(I,Mat_Base)
    holoColor(I,Color_Base)
    holoParent(I,P)
    
    
    local I = 7
    local E = holoEntity(6)
    local P = holoEntity(6)
    holoCreate(I)
    holoPos(I,E:toWorld(vec(0,0,0)))
    holoAng(I,E:toWorld(ang(0,0,0)))
    holoScale(I,vec(5.5,2,5.5))
    holoModel(I,"models/sprops/geometry/fring_24.mdl")
    holoMaterial(I,Mat_Base)
    holoColor(I,Color_Base)
    holoParent(I,P)
    
    
    local I = 8
    holoCreate(I)
    holoPos(I,E:toWorld(vec(0,0,0)))
    holoAng(I,E:toWorld(ang(0,0,0)))
    holoScale(I,vec(5.5,2,5.5))
    holoModel(I,"models/sprops/geometry/fring_24.mdl")
    holoMaterial(I,Mat_Base)
    holoColor(I,Color_Base)
    holoParent(I,P)
    
    
    local I = 9
    holoCreate(I)
    holoPos(I,E:toWorld(vec(0,0,0)))
    holoAng(I,E:toWorld(ang(0,0,0)))
    holoScale(I,vec(5.5,2,5.5))
    holoModel(I,"models/sprops/geometry/fring_24.mdl")
    holoMaterial(I,Mat_Base)
    holoColor(I,Color_Base)
    holoParent(I,P)
    
    local I = 10
    holoCreate(I)
    holoPos(I,E:toWorld(vec(0,0,0)))
    holoAng(I,E:toWorld(ang(0,0,0)))
    holoScale(I,vec(5.5,2,5.5))
    holoModel(I,"models/sprops/geometry/fring_24.mdl")
    holoMaterial(I,Mat_Base)
    holoColor(I,Color_Base)
    holoParent(I,P)
    
    local I = 11
    local E = entity()
    local P = entity()
    holoCreate(I)
    holoPos(I,E:toWorld(vec(0,-25,0)))
    holoAng(I,E:toWorld(ang(0,0,0)))
    holoScale(I,vec(0.8,0.15,0.8))
    holoModel(I,"models/sprops/geometry/sphere_144.mdl")
    holoMaterial(I,"models/debug/debugwhite")
    holoDisableShading(I,1)
    holoParent(I,P)
    
}elseif(dupefinished()){
    reset()
}elseif(!Block){
    if(clk("getents")){
        findExcludeEntities(entity():children())
        findExcludeClass(holoEntity(1):type())
        findInSphere(entity():toWorld(vec(0,0,25)),60)
        Array = findToArray()
    }
    if(clk("teleport")&Open&CanOpen){
        foreach(I,E:entity=Array){
            E:plySetPos(TargetEnt:toWorld(entity():toLocal(E:pos()))+vec(0,0,30))
            #E:setPos(TargetEnt:toWorld(entity():toLocal(E:pos())))
        }
    }
    
    if(clk("entsend")){
        dsSend(WritingData+"_entity_send","transportation-rings-naki",entity())
    }
    if(clk("autoopen")){
        Open = 1
    }
    if(clk("close")){
        dsSend(WritingData+"_close","transportation-rings-naki",WritingData)
        Open = 0
        CanOpen = 0
        WritingData = ""
        TargetEnt=noentity()
    }
    if(changed(Dial)){
        if(Dial){
            #print("dialing "+WritingData)
            dsSend(WritingData+"_check","transportation-rings-naki",Address)
            timer("check_open",500)
        }
    }
    
    if(LowerFloor){
        Val+=100/5
        if(Val>=100){
            Val2+=100/10
        }
        if(Val2>=100&Rise){
            Val7+=100/8
        }
        if(Val7>=50){
            Val6+=100/8
        }
        if(Val6>=50){
            Val5+=100/8
        }
        if(Val5>=50){
            Val4+=100/8
        }
        if(Val4>=50){
            Val3+=100/8
        }
    }else{
        Val3-=100/8
        if(Val3<=20){
            Val4-=100/8
        }
        if(Val4<=25){
            Val5-=100/8
        }
        if(Val5<=30){
            Val6-=100/8
        }
        if(Val6<=35){
            Val7-=100/8
        }
        if(Val7<=20){
            Val2-=100/8
        }
        if(Val2<=0){
            Val-=100/5
        }
    }
    if(TeleportEffect){
        Val8-=100/15
    }
    Val=clamp(Val,0,100)
    Val2=clamp(Val2,0,100)
    
    Val3=clamp(Val3,0,100)
    Val4=clamp(Val4,0,100)
    Val5=clamp(Val5,0,100)
    Val6=clamp(Val6,0,100)
    Val7=clamp(Val7,0,100)
    Val8=clamp(Val8,0,100)
    
    holoPos(4,holoEntity(1):toWorld(vec(0,2.8*(Val/100),-60*(Val2/100))+vec(0,-3,-33)))
    holoPos(5,holoEntity(1):toWorld(vec(0,2.8*(Val/100),60*(Val2/100))+vec(0,-3,33)))
    holoPos(6,entity():toWorld(vec(0,((80/5)*5)-((100)*(Val3/100)),0)+vec(0,5,0)+vec(0,-3,0)))
    holoPos(7,holoEntity(1):toWorld(vec(0,((80/5)*4)-((100)*(Val4/100)),0)+vec(0,0,0)))
    holoPos(8,holoEntity(1):toWorld(vec(0,((80/5)*3)-((100)*(Val5/100)),0)+vec(0,0,0)))
    holoPos(9,holoEntity(1):toWorld(vec(0,((80/5)*2)-((100)*(Val6/100)),0)+vec(0,0,0)))
    holoPos(10,holoEntity(1):toWorld(vec(0,((80/5)*1)-((100)*(Val7/100)),0)+vec(0,0,0)))
    holoPos(11,entity():toWorld(vec(0,10-((100)*(Val8/100)),0)+vec(0,0,0)))
    
    
    if(clk("risefloor")){
        LowerFloor=0
        Rise=0
        TeleportEffect=0
    }
    
    if(!Open){
        if(TextEntry:explode(""):count()==1){
            if(changed(TextEntry)&TextEntry!=""){
                #print(TextEntry)
                WritingData = WritingData+TextEntry
                entity():soundPlay("chevron",0,ButtonSound)
            }
        }
    }
    if(Open&WritingData:explode(""):count() < 1){
        ErrorCode = 1
    }
    if(WritingData:explode(""):count() > 4){
        ErrorCode = 1
    }
    if(Open*(WritingData==Address)){
        ErrorCode = 1
    }
    if(clk("check_open")){
        if(CanOpen==0){
            #print("could not dial: ring did not answer in time or does not exist")
            WritingData = ""
            Glyphs = 0
            Dial = 0
            ErrorCode = 1
            timer("stoperror",2000)
            timer("errorsound",100)
        }
    }
    if(changed(ErrorCode)&ErrorCode){
        WritingData = ""
        Glyphs = 0
        Dial = 0
        timer("stoperror",2000)
        timer("errorsound",100)
    }
    if(clk("stoperror")){
        ErrorCode = 0
    }
    if(clk("errorsound")){
        entity():soundPlay("fail",0,DialErrorSound)
    }
    if(clk("rise")){
        Rise=1
    }
    if(clk("teleportEffect")){
        TeleportEffect=1
        Val8=100
    }
    
    if(changed(Open)&CanOpen){
        if(Open){
            timer("soundstop",8000)
            timer("getents",3000)
            timer("teleport",3800)
            
            LowerFloor=1
            timer("risefloor",4800)
            timer("rise",1500)
            timer("teleportEffect",3500)
            for(I = 1,WritingData:explode(""):count()){
                if(WritingData:explode("")[I,string]==WritingData:explode("")[I+1,string]){
                    ErrorCode=1
                }elseif(WritingData:explode("")[I,string]==WritingData:explode("")[I+2,string]){
                    ErrorCode=1
                }elseif(WritingData:explode("")[I,string]==WritingData:explode("")[I+3,string]){
                    ErrorCode=1
                }
                
                if(!isNumber(WritingData:explode("")[I,string])){
                    ErrorCode=1
                }
            }
            timer("autoclose",(1000*60)*38)
            timer("entsend",1000)
            #ifdef webAudio(string)
            if(webAudiosLeft()>0&webAudioCanCreate()&WebAudio){
                TransportSoundWA = webAudio("https://raw.githubusercontent.com/RafaelDeJongh/cap_resources/master/sound/tech/ring_transporter.mp3")
                TransportSoundWA:setPos(entity():pos())
                TransportSoundWA:setRadius(2000)
                TransportSoundWA:parentTo(entity())
                TransportSoundWA:play()
            }else{
                entity():soundPlay("horizon",0,TransportSound)
            }
            #else
                entity():soundPlay("horizon",0,TransportSound)
            #endif
        }else{
            TargetEnt=noentity()
        }
    }
    if(clk("soundstop")){
        timer("close",100)
        #ifdef webAudio(string)
        TransportSoundWA:destroy()
        #endif
    }
    if(dsClk()){
        if(dsClkName()==Address+"_address_get"){
            WritingData = dsGetString()
            Dial = 1
        }
        if(dsClkName()==Address+"_check"){
            if(!Open){
                dsSend(dsGetString()+"_exists","transportation-rings-naki",entity())
            }
        }
        if(dsClkName()==Address+"_entity_send"){
            TargetEnt = dsGetEntity()
        }
        if(dsClkName()==Address+"_close"){
            if(dsGetString():explode(" ")[1,string]==Address){
                Open = 0
                TargetEnt=noentity()
                Dial = 0
            }
        }
        if(dsClkName()==Address+"_exists"){
            CanOpen = 1
            timer("autoopen",100)
            #print("ring exists")
            dsSend(WritingData+"_address_get","transportation-rings-naki",Address)
        }
        if(dsClkName()==entity():id()+"_enter_number"){
            TextEntry=dsGetString()
        }
        if(dsClkName()==entity():id()+"_dial"){
            Dial=1
        }
    }
}elseif(last()){
    dsLeaveGroup("transportation-rings-naki")
    #ifdef webAudio(string)
    if(TransportSoundWA:isValid()){
        TransportSoundWA:destroy()
    }
    #endif
}
